Resources:
  LineQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      QueueName: line-queue.fifo
  APIGatewaySQSRole:
    Type: AWS::IAM::Role
    DependsOn: LineQueue
    Properties:
      RoleName: ApiGatewaySqsRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: APIGatewaySqsRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - "*"
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Effect: Allow
                Resource: !GetAtt
                  - LineQueue
                  - "Arn"
                Action:
                  - "sqs:SendMessage"
  SqsPullMessagePolicy:
    Type: AWS::IAM::Policy
    Properties:
      UserName: SqsPullMessageUser

  LineApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: line-messages
  LineResource:
    Type: AWS::ApiGateway::Resource
    DependsOn: LineApi
    Properties:
      RestApiId: !Ref LineApi
      ParentId: !GetAtt
        - LineApi
        - RootResourceId
      PathPart: message
  LinePostMethod:
    Type: AWS::ApiGateway::Method
    DependsOn: LineResource
    Properties:
      ResourceId: !Ref LineResource
      RestApiId: !Ref LineApi
      AuthorizationType: NONE
      HttpMethod: POST
      MethodResponses:
        - StatusCode: 200
      Integration:
        Type: AWS
        Credentials: !GetAtt
          - APIGatewaySQSRole
          - "Arn"
        IntegrationHttpMethod: POST
        PassthroughBehavior: NEVER
        RequestParameters:
          "integration.request.header.Content-Type": "'application/x-www-form-urlencoded'"
        RequestTemplates:
          "application/json": "Action=SendMessage&MessageBody=$input.body&MessageGroupId=$input.json('$.events[0].source.userId')&MessageDeduplicationId=$input.json('$.events[0].message.id')"
        IntegrationResponses:
          - StatusCode: "200"
            ResponseTemplates:
              "application/json": "{ \"StatusCode\": 200, \"Message\": \"OK\"}"
        Uri: arn:aws:apigateway:us-east-1:sqs:path/617424127054/line-queue.fifo
  LineDeployPord:
    Type: AWS::ApiGateway::Deployment
    DependsOn: LinePostMethod
    Properties:
      RestApiId: !Ref LineApi
  LineProdState:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId: !Ref LineApi
      DeploymentId: !Ref LineDeployPord
      StageName: pord
